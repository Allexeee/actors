
using System;
using UnityEngine;
using Pixeye.Framework;
using System.Runtime.CompilerServices;

##NAMESPACE##
{
   [Serializable]
    sealed class ##NAME## 
  	{
     	 
       
  	}
  	
    #region HELPERS
    static partial class HelperComponents
    {
    
        	[RuntimeInitializeOnLoadMethod]
    		static void ##NAME##Init()
    		{
    			Storage<##NAME##>.Instance.Creator = () => { return new ##NAME##(); };
    			Storage<##NAME##>.Instance.DisposeAction = Dispose##NAME##;
    		}
    
            /// Use this method to clean variables
        	[MethodImpl(MethodImplOptions.AggressiveInlining)]
    		internal static void Dispose##NAME##(##NAME## component)
    		{
    		}
    
    		 
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            internal static ##NAME## ##NAME##(in this ent entity)
            {
               return Storage<##NAME##>.Instance.components[entity.id];
            }
    }
    #endregion
 
}